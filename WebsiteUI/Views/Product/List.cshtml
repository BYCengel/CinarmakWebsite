@model ProductListViewModel
@{
	ViewData["Title"] = "Ürünler";
	List<ProductModel> products = Model.ProductModels;
}

<div class="row m-2">
	<div class="col-md-2 border-end border-secondary">
		@await Component.InvokeAsync("Categories")

		<div class="dropdown mt-2">
			<button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenu2" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
				Sıralama Seçenekleri
			</button>
			<div class="dropdown-menu" aria-labelledby="dropdownMenu2">
				<a asp-controller="Product" asp-action="@Model.CurrentAction" asp-route-searchString = "@Model.SearchString" asp-route-sortingIndex="1" class="dropdown-item" type="button">Alfabetik</a>
				<a asp-controller="Product" asp-action="@Model.CurrentAction" asp-route-searchString = "@Model.SearchString" asp-route-sortingIndex="4" class="dropdown-item" type="button">Popülerliğe Göre</a>
				<a asp-controller="Product" asp-action="@Model.CurrentAction" asp-route-searchString = "@Model.SearchString" asp-route-sortingIndex="2" class="dropdown-item" type="button">Fiyata Göre Artan</a>
				<a asp-controller="Product" asp-action="@Model.CurrentAction" asp-route-searchString = "@Model.SearchString" asp-route-sortingIndex="3" class="dropdown-item" type="button">Fiyata Göre Azalan</a>
			</div>
		</div>
		<partial name="_Search" />

	</div>
	@if (@Model.ProductModels.Count == 0)
	{
		<div class="col-md-10">
			<div class="row">
				@await Html.PartialAsync("_NoProduct")
			</div>
		</div>
	}
	else
	{
		<div class="col-md-10">
			<div class="row">
				@foreach (var product in products)
				{
					<div class="col-lg-2 col-md-3 col-sm-6">
						@await Html.PartialAsync("_Product", product)
					</div>
				}
			</div>
		</div>
	}

</div>

<div class="row">
	<div class="col">
		<nav aria-label="Page navigation">
			<ul class="paginatio n n">
				@for (int i = 0; i < Model.PageInfo.TotalPages(); i++)
				{
					if (!string.IsNullOrEmpty(Model.PageInfo.CurrentCategoryUrl))
					{
						if (Model.PageInfo.CurrentPage == (i + 1))
						{
							<li class="page-item active">
								<a class="page-link" href="/product/list/@Model.PageInfo.CurrentCategoryUrl?page=@(i+1)">@(i+1)</a>
							</li>
						}
						else
						{
							<li class="page-item">
								<a class="page-link" href="/product/list/@Model.PageInfo.CurrentCategoryUrl?page=@(i+1)">@(i+1)</a>
							</li>
						}
					}
					else
					{
						if (Model.PageInfo.CurrentPage == (i + 1))
						{
							<li class="page-item active">
								<a class="page-link" href="/product/list/?page=@(i+1)">@(i+1)</a>
							</li>
						}
						else
						{
							<li class="page-item">
								<a class="page-link" href="/product/list/?page=@(i+1)">@(i+1)</a>
							</li>
						}
					}
				}
			</ul>
		</nav>
	</div>
</div>
