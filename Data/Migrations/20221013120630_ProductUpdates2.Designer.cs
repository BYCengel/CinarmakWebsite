// <auto-generated />
using System;
using Data.Concrete.EfCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20221013120630_ProductUpdates2")]
    partial class ProductUpdates2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryUrl = "cim-bicme-makineleri",
                            Name = "Çim Biçme Makineleri",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 2,
                            CategoryUrl = "tirpan",
                            Name = "Tırpan",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 3,
                            CategoryUrl = "yedek-parca",
                            Name = "Yedek Parça",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 4,
                            CategoryUrl = "yan-ürünler",
                            Name = "Yan Ürünler",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 5,
                            CategoryUrl = "cim-bicme-traktoru",
                            Name = "Çim Biçme Traktörleri",
                            ViewCount = 0
                        });
                });

            modelBuilder.Entity("Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsHomeDisplay")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMainImageOfProduct")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsHomeDisplay = false,
                            IsMainImageOfProduct = true,
                            Url = "1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            IsHomeDisplay = false,
                            IsMainImageOfProduct = false,
                            Url = "2.jpg"
                        },
                        new
                        {
                            Id = 3,
                            IsHomeDisplay = false,
                            IsMainImageOfProduct = false,
                            Url = "3.jpg"
                        },
                        new
                        {
                            Id = 4,
                            IsHomeDisplay = false,
                            IsMainImageOfProduct = false,
                            Url = "4.jpg"
                        },
                        new
                        {
                            Id = 5,
                            IsHomeDisplay = false,
                            IsMainImageOfProduct = true,
                            Url = "5.jpg"
                        },
                        new
                        {
                            Id = 6,
                            IsHomeDisplay = false,
                            IsMainImageOfProduct = false,
                            Url = "6.jpg"
                        },
                        new
                        {
                            Id = 7,
                            IsHomeDisplay = false,
                            IsMainImageOfProduct = true,
                            Url = "7.jpg"
                        },
                        new
                        {
                            Id = 8,
                            IsHomeDisplay = true,
                            IsMainImageOfProduct = false,
                            Url = "example1.png"
                        },
                        new
                        {
                            Id = 9,
                            IsHomeDisplay = true,
                            IsMainImageOfProduct = false,
                            Url = "example2.png"
                        },
                        new
                        {
                            Id = 10,
                            IsHomeDisplay = true,
                            IsMainImageOfProduct = false,
                            Url = "example3.png"
                        },
                        new
                        {
                            Id = 11,
                            IsHomeDisplay = true,
                            IsMainImageOfProduct = false,
                            Url = "example4.png"
                        });
                });

            modelBuilder.Entity("Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("BasePrice")
                        .HasColumnType("float");

                    b.Property<int>("BasePriceType")
                        .HasColumnType("int");

                    b.Property<string>("CardDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAltered")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPopular")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuggested")
                        .HasColumnType("bit");

                    b.Property<string>("MainImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PurchaseCount")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("SalePrice")
                        .HasColumnType("float");

                    b.Property<int>("StockState")
                        .HasColumnType("int");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BasePrice = 10.0,
                            BasePriceType = 1,
                            CardDescription = "iyi bir çim biçme makinesi",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi non nunc ac risus consequat imperdiet malesuada quis diam. Sed augue eros, tempor sed tempus sed, venenatis ut odio. Aenean sagittis, lorem ac tristique ultrices, purus tellus sollicitudin purus, eget bibendum massa orci ut magna. Etiam vitae efficitur orci. Pellentesque pulvinar risus eget metus dictum accumsan. In pulvinar faucibus nibh, nec congue ipsum rhoncus at. Fusce vel fermentum lectus, id rutrum mi. Nullam ornare nisl ex, vitae pulvinar tortor viverra a. Vestibulum egestas",
                            IsAltered = false,
                            IsApproved = true,
                            IsPopular = false,
                            IsSuggested = true,
                            MainImageUrl = "1.jpg",
                            Name = "Çim Biçme Makinesi",
                            ProductUrl = "cim-bicme-makinesi",
                            PurchaseCount = 0,
                            Quantity = 15,
                            SalePrice = 200.0,
                            StockState = 1,
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 2,
                            BasePrice = 5.0,
                            BasePriceType = 2,
                            CardDescription = "İyi bir tırpan",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi non nunc ac risus consequat imperdiet malesuada quis diam. Sed augue eros, tempor sed tempus sed, venenatis ut odio. Aenean sagittis, lorem ac tristique ultrices, purus tellus sollicitudin purus, eget bibendum massa orci ut magna. Etiam vitae efficitur orci. Pellentesque pulvinar risus eget metus dictum accumsan. In pulvinar faucibus nibh, nec congue ipsum rhoncus at. Fusce vel fermentum lectus, id rutrum mi. Nullam ornare nisl ex, vitae pulvinar tortor viverra a. Vestibulum egestas",
                            IsAltered = false,
                            IsApproved = true,
                            IsPopular = false,
                            IsSuggested = false,
                            MainImageUrl = "5.jpg",
                            Name = "Tırpan",
                            ProductUrl = "tirpan",
                            PurchaseCount = 0,
                            Quantity = 0,
                            SalePrice = 100.0,
                            StockState = 3,
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 3,
                            BasePrice = 2.0,
                            BasePriceType = -1,
                            CardDescription = "İyi bir misina",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi non nunc ac risus consequat imperdiet malesuada quis diam. Sed augue eros, tempor sed tempus sed, venenatis ut odio. Aenean sagittis, lorem ac tristique ultrices, purus tellus sollicitudin purus, eget bibendum massa orci ut magna. Etiam vitae efficitur orci. Pellentesque pulvinar risus eget metus dictum accumsan. In pulvinar faucibus nibh, nec congue ipsum rhoncus at. Fusce vel fermentum lectus, id rutrum mi. Nullam ornare nisl ex, vitae pulvinar tortor viverra a. Vestibulum egestas",
                            IsAltered = false,
                            IsApproved = true,
                            IsPopular = false,
                            IsSuggested = true,
                            MainImageUrl = "7.jpg",
                            Name = "Misina",
                            ProductUrl = "misina",
                            PurchaseCount = 0,
                            Quantity = 200,
                            SalePrice = 40.0,
                            StockState = 1,
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 4,
                            BasePrice = 50.0,
                            BasePriceType = 1,
                            CardDescription = "iyi bir çim biçme traktörü",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi non nunc ac risus consequat imperdiet malesuada quis diam. Sed augue eros, tempor sed tempus sed, venenatis ut odio. Aenean sagittis, lorem ac tristique ultrices, purus tellus sollicitudin purus, eget bibendum massa orci ut magna. Etiam vitae efficitur orci. Pellentesque pulvinar risus eget metus dictum accumsan. In pulvinar faucibus nibh, nec congue ipsum rhoncus at. Fusce vel fermentum lectus, id rutrum mi. Nullam ornare nisl ex, vitae pulvinar tortor viverra a. Vestibulum egestas",
                            IsAltered = false,
                            IsApproved = true,
                            IsPopular = false,
                            IsSuggested = true,
                            MainImageUrl = "3.jpg",
                            Name = "Çim Biçme Traktörü",
                            ProductUrl = "cim-bicme-traktoru",
                            PurchaseCount = 0,
                            Quantity = 0,
                            SalePrice = 1000.0,
                            StockState = 2,
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 5,
                            BasePrice = 4.0,
                            BasePriceType = 2,
                            CardDescription = "iyi bir silindir piston",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi non nunc ac risus consequat imperdiet malesuada quis diam. Sed augue eros, tempor sed tempus sed, venenatis ut odio. Aenean sagittis, lorem ac tristique ultrices, purus tellus sollicitudin purus, eget bibendum massa orci ut magna. Etiam vitae efficitur orci. Pellentesque pulvinar risus eget metus dictum accumsan. In pulvinar faucibus nibh, nec congue ipsum rhoncus at. Fusce vel fermentum lectus, id rutrum mi. Nullam ornare nisl ex, vitae pulvinar tortor viverra a. Vestibulum egestas",
                            IsAltered = false,
                            IsApproved = false,
                            IsPopular = false,
                            IsSuggested = true,
                            MainImageUrl = "1.jpg",
                            Name = "silindir piston",
                            ProductUrl = "silindir-piston",
                            PurchaseCount = 0,
                            Quantity = 30,
                            SalePrice = 80.0,
                            StockState = 1,
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 6,
                            BasePrice = 3.0,
                            BasePriceType = 2,
                            CardDescription = "iyi bir karbüratör",
                            DateAdded = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi non nunc ac risus consequat imperdiet malesuada quis diam. Sed augue eros, tempor sed tempus sed, venenatis ut odio. Aenean sagittis, lorem ac tristique ultrices, purus tellus sollicitudin purus, eget bibendum massa orci ut magna. Etiam vitae efficitur orci. Pellentesque pulvinar risus eget metus dictum accumsan. In pulvinar faucibus nibh, nec congue ipsum rhoncus at. Fusce vel fermentum lectus, id rutrum mi. Nullam ornare nisl ex, vitae pulvinar tortor viverra a. Vestibulum egestas",
                            IsAltered = false,
                            IsApproved = true,
                            IsPopular = false,
                            IsSuggested = false,
                            MainImageUrl = "7.jpg",
                            Name = "karbüratör",
                            ProductUrl = "karburator",
                            PurchaseCount = 0,
                            Quantity = 20,
                            SalePrice = 40.0,
                            StockState = 1,
                            ViewCount = 0
                        });
                });

            modelBuilder.Entity("Entities.ProductCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCategory");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 5
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 6
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 3
                        },
                        new
                        {
                            CategoryId = 5,
                            ProductId = 4
                        });
                });

            modelBuilder.Entity("Entities.ProductImage", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ImageId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "ImageId");

                    b.HasIndex("ImageId");

                    b.ToTable("ProductImage");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            ImageId = 1
                        },
                        new
                        {
                            ProductId = 1,
                            ImageId = 2
                        },
                        new
                        {
                            ProductId = 1,
                            ImageId = 3
                        },
                        new
                        {
                            ProductId = 2,
                            ImageId = 5
                        },
                        new
                        {
                            ProductId = 2,
                            ImageId = 6
                        },
                        new
                        {
                            ProductId = 3,
                            ImageId = 7
                        },
                        new
                        {
                            ProductId = 4,
                            ImageId = 4
                        },
                        new
                        {
                            ProductId = 4,
                            ImageId = 3
                        },
                        new
                        {
                            ProductId = 5,
                            ImageId = 1
                        },
                        new
                        {
                            ProductId = 6,
                            ImageId = 5
                        },
                        new
                        {
                            ProductId = 6,
                            ImageId = 6
                        },
                        new
                        {
                            ProductId = 6,
                            ImageId = 7
                        },
                        new
                        {
                            ProductId = 6,
                            ImageId = 2
                        });
                });

            modelBuilder.Entity("Entities.ProductCategory", b =>
                {
                    b.HasOne("Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Entities.ProductImage", b =>
                {
                    b.HasOne("Entities.Image", "Image")
                        .WithMany("ProductImages")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Entities.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("Entities.Image", b =>
                {
                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Entities.Product", b =>
                {
                    b.Navigation("ProductCategories");

                    b.Navigation("ProductImages");
                });
#pragma warning restore 612, 618
        }
    }
}
